const mongoose = require('mongoose');
require('dotenv').config();

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB Atlas...');
console.log('URI:', process.env.MONGODB_URI ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

if (!process.env.MONGODB_URI) {
  console.log('‚ùå –û—à–∏–±–∫–∞: MONGODB_URI –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env');
  console.log('üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª backend/.env —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:');
  console.log('MONGODB_URI=mongodb+srv://–í–ê–®_USERNAME:–í–ê–®_PASSWORD@–í–ê–®_CLUSTER.mongodb.net/dechat?retryWrites=true&w=majority');
  console.log('PORT=3000');
  console.log('JWT_SECRET=dechat_local_development_secret_key_2024');
  process.exit(1);
}

console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');

mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
  serverSelectionTimeoutMS: 5000, // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
})
.then(() => {
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB Atlas —É—Å–ø–µ—à–Ω–æ!');
  console.log('üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π...');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
  const User = require('./models/User');
  const Chat = require('./models/Chat');
  const Message = require('./models/Message');

  console.log('‚úÖ –ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
  console.log('üéâ MongoDB Atlas –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

  return mongoose.connection.close();
})
.catch((error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:');
  console.log('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);

  if (error.message.includes('authentication failed')) {
    console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤ URI');
  } else if (error.message.includes('getaddrinfo ENOTFOUND')) {
    console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å cluster name –≤ URI');
  } else if (error.message.includes('not authorized')) {
    console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ MongoDB Atlas');
  }

  console.log('\nüîß –®–∞–≥–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:');
  console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ MongoDB Atlas ‚Üí Database Access');
  console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ Read and write');
  console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Network Access ‚Üí –¥–æ–±–∞–≤—å—Ç–µ IP 0.0.0.0/0');
  console.log('4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ connection string –∏–∑ Connect ‚Üí Connect your application');
  console.log('5. –ó–∞–º–µ–Ω–∏—Ç–µ <password> –∏ <database> –≤ URI');

  process.exit(1);
});
